{
	"2.7.884": {
		"type": "release",
		"release-date": "2025-07-02T18:29:00+02:00",
		"download-link": "https://www.dropbox.com/scl/fo/ngb9r6wa1t97u42nenp7n/h?rlkey=cd0s72516hbmsbmfkc2te4kdp&st=7c1rqg4m&dl=0",
		"changelog": "# Release 2.7\n\n## Disclaimer\n\nThis release is not state-compatible with previous software versions; configuration scripts need to be adapted and will need to be reapplied.\n\n## Fixes\n**RTPReceiver** Fix line shift in PAL/2022-6 mode\n\n**AudioEngine** Fix command stream corruption causing wrong audio to be sent to sinks\n\n**RePlay** Make sure to always correctly initialize crossbar routes to video delays after reboot\n\n**RTPTransmitter** Don't update SDPs of unaffected sessions on transmitter updates\n\n**RTPTransmitter** [AT1130] Fix a rare race condition that could cause UHD transmitters to emit corrupted streams\n\n**AudioMixer** Explicitly set node memory limit to prevent OOM\n\n**RTPReceiver** Don't deny readout on packet duplication\n\nin cases of RTP packet duplication on every network leg, the receiver would previously fail its internal sanity checks while trying to determine mpacket-to-mpacket sequence number distances, and consequently deny readout. With this patch, mpacket duplicates are removed (unless the stream duplicate comes in at a delay greater than the mpacket interval), and duplicates are counted explicitly to facilitate network issue detection (see `r_t_p_receiver.packet_streams[*].mpacket_duplicates_received`)\n\n**RTPReceiver** [AT1130] Increase microburst absorption capabilities.\n\n**NetworkManager** [PCap/AT1130] Maintain configured `StoreAndForward` latency under low-traffic conditions.\n\nPreviously, memory writes would solely be driven by incoming data, which maximizes storage capacity but can significantly increase transmission latency when in `StoreAndForward` mode. Now, pending writes are pushed forward automatically at a rate chosen to guarantee the user-configured minimum transmission delay.\n\n**NetworkManager** [PCap/AT1130] Fix regression that could cause the PCapper's output stream to intermittently collapse when in `StoreAndForward` mode.\n\nThis seems to have been caused by a bad merge; for now we have rolled back to an older FPGA build that does not include the recently introduced i2c fixes; a proper fix that includes the i2c stability improvements will follow soon.\n\n**RTPTransmitter** Flush packet handler after disabling all parts of a transmitter to avoid spurious UDP checksum errors\n\n**RTPTransmitter** Add custom keyword validator for `HeaderSettings` (this way, writes with optional fields left blank, and no custom validator specified will no longer fail)\n\n**RTPReceiver** Fix bug in egress media clock computation\n\n**WebServer/NMOS** Fix crash in `/constraints` endpoint\n\n**WebServer/NMOS** Clear internal `busy` flag on error path to fix a potential liveness issue in receiver control\n\n**RTPReceiver** Fix bug that could sometimes cause false backend liveness timeout positives\n\n**Webserver** Fix crash in websocket proxy used by AMixer\n\n**RePlay** Fix memory corruption bug within the audio delay handler\n\n**Ember+** Fix service file bug that would prevent the Ember+ driver from coming up automatically after reboot\n\n**IOModule** Limit maximum audio groups in SDI output based on video standard to avoid audio corruption\n\n**RTPTransmitter** [JPEG-XS/AT1130] Fix a bug wherein high enough numbers of 2110-20 transmitters (but well below nominal capacity) could emit corrupted data\n\n**RTPReceiver** Fix a bug where instances of the same multiplexed receiver block might see their neighbors' `max_age` setting and thus produce spurious RX errors if buffer capacities were different\n\n**RTPReceiver** Fix a race condition wherein receivers might incorrectly try to read out a packet that had only been committed to other memory channels (this bug can only occur when using clean switching together with stream sharing)\n\n**UI** Correctly record references to non-KWL entities (as used by the AudioShuffler)\n\n**Genlock** Fix driver bug that could indefinitely hold off calibration when trying to lock to an analog reference input with sufficiently high drift\n\n**AudioMixer** Fix rounding issues which could result in the fader not moving to the lowest point\n\n**AudioMixer** Fix peak hold continously updating the UI\n\n**AudioMixer** Changing the compressor threshold value while in AutoGain mode was wrongly moving the graph handle\n\n**REST API** Resolve some parameters wrongly returning 404 Not Found\n\n**AudioMixer** Mute, faders and input gains where not updated when creating a mixer with existing state\n\n**NMOS** Resolve an issue that would lead to receivers trying to patch to the wrong track.\n\n## Changes\n**AudioMixer** The number of VCAs allocated for a mixer can now be reduced (default is still 128) - this can help improve performance and memory usage\n\n**RTPTransmitter** Add `b6_0Gb` bandwidth constraint\n\n**AudioMixer** Increase WebSocket performance significantly, decrease memory usage\n\n**WebServer/NMOS** Add `format:mux` and special handling for 2022-6-only receivers\n\n**RTPReceiver** Change default of `on_sdp_collision` to `RejectSilently`\n\n**UI** For debug purposes, the advanced UI now supports interactive inspection of settings.json files (interpreted using the data schema provided by the blade currently in use). To use this feature, open the command prompt and type `:show-settings`\n\n**System** [AT1130] Report HBM error counters\n\n**RTPTransmitter** Directly report per-transmitter and per-session traffic statistics for easier monitoring\n\n**RTPReceiver** Report mpackets/second (time-averaged over ~20-30 minutes) and mpackets with non-end-of-frame field flags\n\n**RTPReceiver** Ignore packet pacing attribute during flow identification\n\n**RTPReceiver** Increase default RX error thresholds (the rationale being that there is no relevant difference in restart latency if a stream is seriously damaged, but for occasional packet drops a few black pixels are far preferable over full signal interruptions)\n\n**RTPTransmitter** Transmitters now delay activation until the genlock(s) they use are calibrated; this may require changes to user scripts if genlock calibration isn't currently explicitly being checked for.\n\n**AudioMixer** restyled overview page\n\n**RTPReceiver** The default `rx` error threshold has been raised from 4 to 1000, and `offset_2110` and `linenr_2110` from 4 to 10000: low thresholds mainly serve to not unnecessarily delay a corrective restart attempt, but with per-packet counters, there is hardly any latency difference between 4 and 1000, and lower thresholds only increase the probability of unnecessary loss-of-signal events.\n\n**vscriptd** Don't refuse settings.json->script conversion when failing to look up some deprecated keyword's metadata. Instead, vscriptd will now generate lots of diagnostics at script execution time, which isn't ideal either, but at least allows the user to thoroughly check for potential translation errors.\n\n**Genlock** [AT1130] Add toplevel state keyword per instance that aggregates single-lane states to simplify monitoring\n\n**NetworkManager** Remove address-via-Morse-code feature entirely: with the best Morse reader smartphone app we could find, this still required proper reader configuration and a steady hand, so this feature turned out to not be very helpful in practice; whereas it was very effective at confusing people because QSFP LEDs would blink in a strange pattern after every link state change. Instead, we now recommend to attach a USB-to-serial cable, and use a laptop or smartphone with serial app to read out ip addresses\n\n**NetworkManager** Remove stale entries on address deletion\n\n**NetworkManager** Don't list ipv6 addresses\n\nWhile blade//runner supports both ipv4 and ipv6 in principle, the TX/RX driver software currently assumes ipv4, and will continue to do so while there is zero customer demand for ipv6. Until we change this, listing ipv6 addresses will typically only produce a link-local `fe80::...` entry that often has to be disregarded explicitly during scripting\n\n**RTPReceiver** The 2110-20 engine is now less likely to crash (\"backend liveness timeout\") on invalid payloads\n\nshould you still encounter backend liveness issues, please provide us with a pcap of the troublesome packet stream\n\n**RTPReceiver** The 2110-40 embedder now correctly handles the reserved line number 0x7FE\n\n**PTPFlows** Fix a bug that could cause the hw delay response generator to lock up the irq bus on link_up changes\n\n**System** Improve i2c robustness (used for PSU communication, and `system.slots`)\n\n**NetworkManager** Change weight to metric in route configuration\n\n**AudioEngine** Remove the peak meters from mono and stereo mix\n\n**AudioMixer** Add Sample Rate Converters to the list of input sources for the UI\n\n**AudioMixer** AUX and sums can now be colorerd in the main channel section\n\n**AudioMixer** Allow specifying channel layout by specifying a URL query `layout=layoutname`, the query can now also be used to specify the mixer index or name\n\n**VideoSignalGenerator** [AT1130] add `Black` setting\n\n**UI** The EasyIP router control matrix interface is now part of the landing page (requires a suitable blade//master configuration file)\n\n**AudioMixer** AUX and sums can now be included in the main channel section\n\n**AudioMixer** Add Step mode to gate\n\n**AudioMixer** Show a error page with more information when the service isn't running\n\n**AudioMixer** Show AUX enable and tap select in pan / balance row for AUX delegation\n\n**AudioMixer** Add option to color channel background to easier differentiate channels\n\n**AudioMixer** Add option to allow mute to also apply to AUX sums\n\n**AudioMixer** Different PPM scales are now selectable (UI)\n\n**AudioMixer** Loudness target level can now be selected (UI)\n\n**AudioEngine** Add Faders module with adjustable transition type / shapes\n\n**AudioEngine** InputTrim now perform a clean cross fade when switching between A/B\n\n**AudioEngine** MidSide got a new behavior mode for rotation: MID_PAN_ONLY\n\n**AudioEngine** Add a `only_internal_inputs` flag to capabilities\n\n**IPAudio** Increase the number AudioEngine delays and faders\n\n**AudioMixer** New compressor modes: auto gain, ducking (using side chain)\n\n**AudioMixer** AUX faders can be delegated to faders in virtual panel\n\n**AudioMixer** Input assignment\n\n**AudioMixer** More and easier to use panel delegation\n\n**AudioMixer** Loudness monitoring UI (via panel delegation)\n\n**AudioMixer** GPI control for channel faders\n\n**AudioMixer** Ember+ control via port 9001\n\n**AudioMixer** Provide sample config JSONs for mixer creation\n\n**GUI** (flows) AudioMixer outputs can be routed\n\n**GUI** (flows) Re-/naming of processors added (row_name,rename).\n\n**GUI** (flows) Add button to menu of Rx/Tx sessions to show statistics of all related video/audio receivers/transmitters at once.\n\n**GUI** (flows) Add Audio Gain processors\n\n**GUI** (re_play) Add audio delays\n\n**GUI** (flows) Add edit mode for SDI outputs\n\n**GUI** (flows) Add copy/select button to SDP text fields\n\n**GUI** (flows) Add switch type to rtp receiver wizards (patch,mbb,bbm)\n\n**GUI** (flows) Switch row_name and generic names in flows, preventing confusion\n\n**GUI** (ip address) Add configuration of VLANs\n\n**GUI** (tx traffic) Adapt new keyword structure for transmitter traffic data\n\n**Live View** (PPMs) Add MADI inputs, added audio shuffler\n\n**Live View & PPMs** Add drag'n'drop routing\n\n## Overview\n\n**AT300/AVP_100GbE** 36x RTPVidTx, 32x RTPVidRx, 511x RTPAudTx, 256x RTPAudRx, 32x RTPAnc/BurstRx, 24x ColCorr (12x 3D-LUT based), 24x VidMix/Key, 16x VidRePlay, 128x AudRePlay, AudioGain, 3x 384 AudioSRCs, 563x AudioShuffler, 20x VC2Enc, 32x VC2Dec, 2x LTCGen, 3x VidGenlock, 3x AudGenlock, 2x VidSignalGen, AudioSignalGen silence/400Hz/440Hz/1kHz, 3x MasterClock LTC-Gen, 16x Audio N-Minus-1, 64x AudioMixer, 256x LoudnessMetering\n\n**AT300/JPEGXS_RX_100GbE** 32x RTPVidRX, 8x JPEGXSDec, 16x VC2Dec, 30x RTPVidTx ...\n\n**AT300/JPEGXS_TX_100GbE** 30x RTPVidTx. 8x JPEGXSEnc, 32x RTPVidRx, 32x VC2Dec ...\n\nRelease 2.7 supports **C100  AVP / AVP_40GbE / CC3D_40GbE / JPEGXS_40GbE / PCAP_40GbE / UDX_40GbE\n\nFor a detailed list of hardware capabilities, please load the application you wish to use and refer to http://<ip-address-of-your-AT300>/runtime_constants.json\n"
	}
}